---+!! FormQueryPlugin

The FormQueryPlugin provides a query interface to the [[Foswiki:Extensions/DBCacheContrib][Foswiki::Contrib::DBCacheContrib]] module, giving a way to present query results. It also supports 'result sets' that simplify successive refinements of searches.

When using the plugin each topic is treated as a container for data fields. These are the fields in the form attached to the topic. You can also request that tables in the topics be made searchable.

The tutorial section of this topic gives an introduction to formulating and formatting queries using this plugin, and is a good place to start.

%TOC%

---++ Features
   * Perform complex queries on the database
   * Use result sets
   * Extensive conditional formatting support
   * Automatic derivation of new topic names
   * Recognition and special formatting of key data strings

---++ Searching tables
As well as the form data attached to a topic, the FormQueryPlugin adds the ability to extract embedded tables from topics.

Embedded tables that follow a specific format (defined using the Edit<nop>TablePlugin) are added to the topic as an array of rows, each of which contains a map keyed on the fields and mapping to the values in the table. This array is added to the topic as a field named the same as the table type. Where there are multiple tables of the same type in a topic, they are concatenated together into a single array. See [[#SettingsAnchor][Settings]] for more information about how to set up tables.

Topics can also be automatically related to each other by name. The plugin uses something called [[#TopicRelations][Topic Relations]] that allow the creation of two-way relationships between topics. Topic relations from parent topics to child topics are stored in the map of the parent topic using _the name of the relation_ as the field name and an array of references to the maps of child topics. Reverse relations from child to parent topics are also stored. See [[#SettingsAnchor][Settings]] for more information about how to set up topic relations.

Most of the rest of this documentation describes how to search this database and generate reports.

---++ Syntax Rules

A query has first to be _formed_ using =FORMQUERY=, and then _shown_ using =SHOWQUERY=. You can combine these operations using =DOQUERY=. Queries are output according to a format specification in the parameters to =SHOWQUERY=. You can cache these specifications for re-use by defining them using =TABLEFORMAT=.

The syntax of queries supported by FormQueryPlugin is very similar to the synatx used in =%<nop>SEARCH{type="query"=. However it is subtly different; the FormQueryPlugin predated the core support for query searches by some years.

%INCLUDE{VarFORMQUERY}%
%INCLUDE{VarTABLEFORMAT}%
%INCLUDE{VarSHOWQUERY}%
%INCLUDE{VarDOQUERY}%
%INCLUDE{VarQUERYTOCALC}%
%INCLUDE{VarSHOWCALC}%
%INCLUDE{VarSUMFIELD}%
%INCLUDE{VarMATCHCOUNT}%

---++ Tutorial
See Foswiki::Plugins/FormQueryPluginTutorial for a tutorial describing how to use the plugin in real-world applications.

---++ Formatted query examples

!%TABLEFORMAT% is able to generate (roughly) the same output as %SYSTEMWEB%.FormattedSearch, based on an earlier query. Multiple different formatted results can be produced without having to rerun the query.

#SearchBulletList
---+++ Bullet list showing topic name and summary

*Write this:*

=%<nop>FORMQUERY{name="q1" search="topic=~'FAQ'" web="%WEB%"}%= %BR%
=%<nop>SHOWQUERY{query="q1" header="   * *Topic: Summary:*" format="   * [<nop>[$web.$topic]]: $summary(25)"}%=

*To get this:*

%FORMQUERY{name="q1" search="topic=~'FAQ'" web="%WEB%"}%
%SHOWQUERY{query="q1" header="   * *Topic: Summary:*" format="      * [[$web.$topic]]: $summary(25)"}%


---+++ Extract some text from a topic using regular expression

*Write this:*

=%<nop>FORMQUERY{name="q1" search="text=~'__Back to:__ <nop>FrequentlyAskedQuestions'" web="%WEB%"}%= %BR%
=%<nop>SHOWQUERY{query="q1" header="FAQs:" format="   * $pattern(.*?FAQ\:[\n\r]*([^\n\r]+).*) [<nop>[$web.$topic][Answer...]]"}%=

*To get this:*

%FORMQUERY{name="q1" search="text=~'__Back to:__ FrequentlyAskedQuestions'" web="%WEB%"}%
%SHOWQUERY{query="q1" header="FAQs:" format="   * $pattern(.*?FAQ\:[\n\r]*([^\n\r]+).*) [[$web.$topic][Answer...]]"}%


---+++ Nested Search

Search can be nested. For example, search for some topics, then form a new search for each topic found in the first search. The idea is to build the nested search string using a formatted search in the first search.

For example, let's search for all topics that contain the word "culture" (first search), and let's find out where each topic found is linked from (second search).

   * First search:
      * =%<nop>FORMQUERY{name="q1" search="text=~'culture'" web="%WEB%"}% %<nop>SHOWQUERY{query="q1" format="   * $web.$topic is referenced by:$n(list all references)"}%=
   * Second search. For each hit we want this search:
      * =%<nop>DOQUERY{"(topic found in first search)" separator=", " web="%WEB%" format="$web.$topic"}%=
   * Now let's nest the two. We need to escape the second search, e.g. the first search will build a valid second search string. Note that we escape the second search so that it does not get evaluated prematurely by the first search:
      * Use =$percnt= to escape the leading percent of the second search
      * Use =\"= to escape the double quotes
      * Use =$dollar= to escape the =$= of =$topic=

*Write this:*

=%<nop>FORMQUERY{name="q1" search="text=~'culture'" web="%WEB%"}%= %BR%
=%<nop>SHOWQUERY{query="q1" format="   * $web.$topic is referenced by:$n      * $percntDOQUERY{\"$topic\" separator=\", \" web=\"%WEB%\" format=\"$dollarweb.$dollartopic\"}$percnt "}%=

*To get this:*

%FORMQUERY{name="q1" search="text=~'culture'" web="%WEB%"}%
%SHOWQUERY{query="q1" format="   * $web.$topic is referenced by:$n      * $percntDOQUERY{\"$topic\" separator=\", \" web=\"%WEB%\" format=\"$dollarweb.$dollartopic\"}$percnt "}%

__Note:__ Nested search can be slow, especially if you nest more then 3 times. Nesting is limited to 16 levels. For each new nesting level you need to "escape the escapes", e.g. write =$dollarpercntDOQUERY= for level three, =$dollardollarpercntDOQUERY= for level four, etc.

---+++ Most recently changed pages

*Write this:*

=%<nop>FORMQUERY{name="q1" search="" web="%WEB%"}%= %BR%
=%<nop>SHOWQUERY{query="q1" limit="7" sort="info.date" format="| $web.$topic | $wikiusername | $date |"}%=

*To get this:*

%FORMQUERY{name="q1" search="" web="%WEB%"}%
%SHOWQUERY{query="q1" limit="7" sort="info.date" format="| $web.$topic | $wikiusername | $date |"}%

---+++ Search with conditional output

A regular expression search is flexible, but there are limitations. For example, you cannot show all topics that are up to exactly one week old, or create a report that shows all records with invalid form fields or fields within a certain range, etc. You need some additional logic to format output based on a condition:
   1. Specify a search which returns more hits then you need
   1. For each search hit apply a spreadsheet formula to determine if the hit is needed
   1. If needed, format and output the result
   1. Else supress the search hit

This requires the Foswiki:Extensions.SpreadSheetPlugin. The following example shows all topics that are up to exactly one week old.

*Write this:*

=%<nop>CALC{$SET(weekold, $TIMEADD($TIME(), -7, day))}%= %BR%
=%<nop>FORMQUERY{name="q1" search="name='.*'" web="%WEB%"}%= %BR%
=%<nop>SHOWQUERY{query="q1" sort="info.date" format="$percntCALC{$dollarIF($dollarTIME($date) &lt; $dollarGET(weekold), <nop>, | $web.$topic | $wikiusername | $date | $rev |)}$percnt" }%=

   * The first line sets the =weekold= variable to the serialized date of exactly one week ago
   * The SHOWQUERY has a deferred CALC. The =$percnt= makes sure that the CALC gets executed once for each search hit
   * The CALC compares the date of the topic with the =weekold= date
   * If topic is older, a =&lt;nop&gt;= is returned, which gets removed at the end of the Foswiki rendering process
   * Otherwise, the search hit is formatted and returned

*To get this:*

%CALC{$SET(weekold, $TIMEADD($TIME(), -7, day))}%
%FORMQUERY{name="q1" search="name='.*'" web="%WEB%"}%
%SHOWQUERY{query="q1" sort="info.date" format="$percntCALC{$dollarIF($dollarTIME($date) < $dollarGET(weekold), <nop>, | $web.$topic | $wikiusername | $date | $rev |)}$percnt" }%

_Note: If you don't see any output, then there are no files newer than 7 days. Rows without entries in all but the first field are due to incorrect topics present in the Foswiki web (no topic info line, thus we cannot find date, author, rev)._

---+++ Embedding search forms to return a formatted result

Use an HTML form and an embedded formatted search on the same topic. You can link them together with an =%<nop>URLPARAM{"..."}%= variable. Example:

*Write this:*

<verbatim>
<form action="%SCRIPTURLPATH%/view%SCRIPTSUFFIX%/%WEB%/%TOPIC%">
Find Topics: 
<input type="text" name="q" size="32" value="%URLPARAM{"q"}%" />
<input type="submit" value="Search" />
</form>
Result:
</verbatim>
=%<nop>FORMQUERY{name="q1" search="text=~'%URLPARAM{"q"}%'" web="%WEB%"}%= %BR%
=%<nop>SHOWQUERY{query="q1" limit="7" format="   * $web.$topic: %<nop>BR% $summary" }%=

*To get this:*

<form action="%SCRIPTURLPATH%/view%SCRIPTSUFFIX%/%WEB%/%TOPIC%">
Find Topics: 
<input type="text" name="q" size="32" value="%URLPARAM{"q"}%" />
<input type="submit" value="Search" />
</form><br>
Result (first 7):
%FORMQUERY{name="q1" search="text=~'%URLPARAM{"q"}%'" web="%WEB%"}%
%SHOWQUERY{query="q1" limit="7" format="   * $web.$topic: %BR% $summary" }%

---+++ Generate a table with embedded calculations

Assume you want to produce a summary of all the large attachments in a topic (where by large we mean any attachment greater than 10k). The table should show topic, the name of the attachment, the file size in k, and the date when the attachment was created.

*Write this:*

=%<nop>FORMQUERY{name="all" search="" web="%WEB%" extract="attachments"}%= %BR%
=%<nop>FORMQUERY{name="big" query="all" search="size&gt;'10240'"}%= %BR%
=%<nop>SHOWQUERY{query="big" format="|$_up.web.$_up.name|$name|  $percntCALC{$dollarROUND($dollarEVAL($size / 1024), 1)k}$percnt|$percntCALC{$dollarFORMATTIME($date, $dollarday $dollarmon $dollaryear)}$percnt|"}%=

*To get this:*

%FORMQUERY{name="all" search="" web="%WEB%" extract="attachments"}%
%FORMQUERY{name="big" query="all" search="size>'10240'"}%
%SHOWQUERY{query="big" format="|$_up.web.$_up.name|$name|  $percntCALC{$dollarROUND($dollarEVAL($size / 1024), 1)k}$percnt|$percntCALC{$dollarFORMATTIME($date,  $dollarday $dollarmon $dollaryear)}$percnt|"}%

<!--
One line description, shown in the %SYSTEMWEB%.TextFormattingRules topic:
   * Set SHORTDESCRIPTION = %$SHORTDESCRIPTION% 
-->

#TopicRelations
---+++ Topic Relations
Topic relations are defined by setting the =FORMQUERYPLUGIN_RELATIONS= variable in the Web<nop>Preferences topic of the web to be processed. This defines a semicolon-separated list of rules for deriving relationships between topics using common portions of names. This is best illustrated by an example. Let's say we set =FORMQUERYPLUGIN_RELATIONS= to be:
<pre>
ReQ%Ax%B SubReq ReQ%A; TiT%An%B TestItem ReQ%A
</pre>
This describes two rules, the first of which says "Any topic named "ReQ&lt;something>x&lt;something>" is a Sub<nop>Req of another topic called "ReQ&lt;something>". Single upper case characters with a preceding percent sign are used to define the &lt;something>s. So, in this example, =ReQ1456= has the =SubReq= relation to =ReQ1456x7=. The reverse relation is also inserted, but appending =_of= to the relation name, so =ReQ1456x7= has the =SubReq_of= relation to =ReQ1456=.

Obviously a single topic may have many topics that have the same relation to it (i.e. they are _one-to-many_), so forward relations are stored as arrays in the maps that represent topics. Reverse relations are _many_to_one_ so they are stored as a simple field in the other topic. Relations are stored as pointers to the maps of the other topic so they can't be printed as if they were simple names. Instead you have to use them to refer to fields within the other topic. For example, in a <code>%SHOWQUERY</code> showing =ReQReQ1456x7= you can't refer simply to =$SubReq_of= to get =ReQ1456= (the name of the related topic); you have to use =$SubReq_of.topic= instead.

The default value of =FORMQUERYPLUGIN_RELATIONS= is none.

#FqTables
---+++ Tables
Tables to be read into the database must use the Edit<nop>TablePlugin 'include= _topic_ ' feature (or the <nop>EditTablerow 'template= _topic_ ' feature), which define the format of the tables in another topic. Tables to be read are defined by setting the =FORMQUERYPLUGIN_TABLES= variable in the WebPreferences topic of the web. This is a list of the names of the topics that Edit<nop>TablePlugin or <nop>EditTablerowPlugin use to find the table formats. Tables are read in as arrays of maps, with each map keyed on a field name generated by stripping all non-alphabetic characters from the column header. Note that the column header where the table is defined is used, not the column header in the Edit<nop>Table include= topic. If the =FORMQUERYPLUGIN_TABLES= variable is set to =All= (case-insensitive), then any valid table is added to the database.

The default is to load all tables:
   * Set FORMQUERYPLUGIN_TABLES = all

Two special map entries are added to each table row, =topic= and the equivalent of the reverse relation described above, represented by =_up=. So if you load a table type "CookingTimes", each row will have =topic= set to the name of the topic it was loaded from and =_up= set to the map of that topic. This allows you to refer to the fields of the topic that contains a table even after the table has been extracted.

When a table contains calculations using Foswiki:Extensions.SpreadSheetPlugin, these are applied before the map entries are created for this table. These calculations must not refer to data outside of the table.

If there are multiple EDITTABLE calls with the same table type, all the table
data is concatenated into a single table.

The current value of =FORMQUERYPLUGIN_TABLES= is %FORMQUERYPLUGIN_TABLES%.

For example, let's say we have a table in a topic called !TableDefinition, 
like this:

<verbatim>
%EDITTABLE{header="|*Name*|*Description*|"}%
|*Name*|*Description*|
</verbatim>

Now, in another topic, !TableUse, we have
<verbatim>
%EDITTABLE{include="TableDefinition"}%
| Cat | Small furry animal |
...
%EDITTABLE{include="TableDefinition"}%
| Dog | Latch used to seal a hatch on a ship |
</verbatim>
In this case, =$TableDefinition.0.Name= is =Cat=, =$TableDefinition.1.Name= is =Dog=.

---++ Plugin Installation Instructions
%$INSTALL_INSTRUCTIONS%
   * Note: preferences are no longer read from this topic. They must be set
     in %USERSWEB%.SitePreferences, WebPreferences in individual webs, or in
     individual topics
   * The variable %<nop>FORMQUERYPLUGIN_ENABLE% *must* be set either globally or in the web where you want to use it. If the plugin is enabled globally (on all webs), this may have an unwelcome performance impact, as the plugin may create a cache of topics in a web where it is not intended to be used. To enable the plugin for selected webs only, put the following line into the !WebPreferences topic of the web you want to enable it on:
<pre>
   * Set FORMQUERYPLUGIN_ENABLE = 1
</pre>
   * You can set a default for the =moan= parameter by setting the =FORMQUERYPLUGIN_MOAN preference.
   * FormQueryPlugin must appear in the Plugins evaluation order *before* !SpreadSheetPlugin. You can ensure this by putting !FormQueryPlugin first in the {PluginsOrder} list in =configure=.
   * Note: If you are using it, !MacrosPlugin must appear in the Plugins evaluation order *before* !FormQueryPlugin.

---
---++ Plugin Info

|  Author: | Foswiki:Main/CrawfordCurrie, with contributions from Foswiki:Main/ThomasWeigert and others |
|  Version: | %$VERSION% |
|  Release: | %$RELEASE% |
|  Change History: | |
|  17 Nov 2009 | Foswikitask:Item4199: broke up doc topics |
|  7 Apr 2009 | Foswikitask:Item8053: fixed QUERYTOCALC, which was always coming up a row short Foswikitask:Item3537: added =$formatTime= as proposed by Stephane Lenclud. |
|  28 Jan 2009 | Foswikitask:Item452: ported to Foswiki, updated for changes made for Berkeley DB support |
|  21 May 2007 | TWikibug:Item3969 - 8bit email fix (Foswiki:Main.WillNorris) |
|  24 Apr 2007 (13527) | Merge !YetAnotherFormQueryPlugin back in. Fixed a lot. Prepared for use with Foswiki 4.2. |
|  04 Sep 2006 | Expand calculations using Foswiki:Extensions.FormQueryPlugin. |
|  23 Jun 2006 | Ported to Dakar. |
|  9 Jul 2005 | Added support for tables defined using Foswiki:Extensions/EditTablerowPlugin |
| | Added support for searches over multiple webs |
| | Support !%MATCHCOUNT%  |
| | Allow Foswiki:Extensions/SpreadSheetPlugin computation to be applied to the result of a query |
| | Made "moan" a preference rather than a per call option |
| | Removed !%TOPICCREATOR% |
| | Removed !%ARITHMETIC% (as one can use the Foswiki:Extensions/SpreadSheetPlugin) |
| | Removed the color map feature |
| | Extended !%FQPINFO% to support showing results of queries |
| | Integrate the Attribute parser from Foswiki:Codev/DakarRelease |
| | Add caseinsensitivity as option |
| | Handle one line at a time so that query memory can be reused in another query |
| | Added the special variables supported by %SYSTEMWEB%.FormattedSearch |
| | Changed some of the option names to be more consistent with %SYSTEMWEB%.FoswikiSearch (e.g., =row_count=) |
| | More flexibility for using tables |
| | Add a !%DOANDSHOWQUERY% tag |
| | Support embedding of !%SEARCH% and !%FORMQUERY% in the format option to allow searches and queries to be applied to the result of a query (a poor man's intersection) |
| | Added option to switch on/off "Undefined" messages for undefined field values |
| | Expanded fields no longer have spaces around them. This is more correct, but requires care in =format= definitions. |
| 16 Jul 2004  | Split into sub-components |
| 02 Apr 2004  | Foswiki:Main/SimonHardyFrancis bugfixes incorporated. Foswiki:Main/TimSlidel patches incoporated for mod_perl, autocreate, and collapsing same-type tables in a single topic |
| 05 Feb 2004  | Bugfix version |
| 11 Jul 2003  | Initial version |
|  Dependencies: | %$DEPENDENCIES% |
|  Home: | http://foswiki.org/Extensions/%TOPIC% |
|  Support: | http://foswiki.org/Support/%TOPIC% |

---+++ Copyright

This code is based on an original development of Motorola Inc. and is protected by the following copyrights:
   * Copyright &copy; 2002-2003, 2005 Motorola. All Rights Reserved.
   * Copyright &copy; 2004. Crawford Currie http://www.c-dot.co.uk
